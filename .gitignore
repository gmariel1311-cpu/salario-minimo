#Montar el drive
from google.colab import drive
drive.mount('/content/drive')



#--------------------------------------Crear archivo csv limpio-----------------------------

#importar pandas
import pandas as pd

# Ruta al archivo de salario m√≠nimo en drive (por eso se mont√≥)
ruta_salario = "/content/drive/MyDrive/CIENCIA DE DATOS/salario minimo.xlsx"
# Leer el archivo
salario = pd.read_excel(ruta_salario)

# Mostrar las primeras filas y nombres de columnas
print(salario.head(20))
print(salario.columns)

# Saltar las primeras 18 filas (√≠ndices 0 a 16)
salario = pd.read_excel(ruta_salario, skiprows=17)

#Renombrar la segunda y tercer columna zomo frontera y zona general
salario = salario.rename(columns={salario.columns[1]: "Frontera", salario.columns[2]: "Zona General"})

# Mostrar las primeras filas y nombres de columnas
print(salario.head(20))
print (salario.tail(20))
print(salario.columns)

# Sabemos que la columna se llama "Fecha"
salario["Mes_abrev"] = salario["Fecha"].dt.strftime("%b")   # Ene, Feb, Mar...
salario["A√±o"] = salario["Fecha"].dt.year.astype(str)

# Nueva columna "Periodo" = Mes abreviado + A√±o
salario["Periodo"] = salario["Mes_abrev"] + " " + salario["A√±o"]

print(salario.head(5))


# Guardar dataset limpio
ruta_limpia = "/content/salario_minimo_limpio.csv"
salario.to_csv(ruta_limpia, index=False)

print(f"‚úÖ Archivo limpio guardado en: {ruta_limpia}")

#revisar si el data set se guard√≥
import os
os.listdir("/content")

# Leer para verificar si se limpio el data set
df = pd.read_csv("/content/salario_minimo_limpio.csv")
print(df.head())
print(df.columns)

#instalar streamlit y ngrok
!pip install streamlit pyngrok pandas matplotlib

#importar librerias
from pyngrok import ngrok

# Conecta ngrok con tu cuenta (dej√© instrucciones en readme para que hagas la tuya)
ngrok.set_auth_token("AQU√ç VA TU AUTHTOKEN")

# Abre el t√∫nel al puerto 8501 (donde se ejecutar√° Streamlit haz clic al link al final)
public_url = ngrok.connect(8501)
print("üåê Enlace para abrir tu app Streamlit:")
print(public_url)


# ========================================
#  Aplicaci√≥n interactiva: Salario M√≠nimo en M√©xico
# ========================================

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# ============================
# 1. Cargar dataset
# ============================
st.title("üí∞ An√°lisis del Salario M√≠nimo en M√©xico")

ruta = "/content/salario_minimo_limpio.csv"

st.sidebar.header("Configuraci√≥n")
st.sidebar.write("Puedes explorar el dataset y visualizar tendencias del salario m√≠nimo.")

# Intentar leer el archivo
try:
    df = pd.read_csv(ruta)
    st.success("‚úÖ Archivo cargado correctamente.")
except FileNotFoundError:
    st.error("‚ùå No se encontr√≥ el archivo en la ruta indicada.")
    st.stop()

# Mostrar informaci√≥n b√°sica
st.subheader("üìÑ Vista general del dataset")

# Slider para elegir cu√°ntas filas mostrar
n_filas = st.slider("Selecciona cu√°ntas filas deseas ver:", 5, min(len(df), 100), 10)
st.dataframe(df.head(n_filas), use_container_width=True)

# Mostrar dimensiones y columnas
st.write(f"**Filas:** {df.shape[0]} | **Columnas:** {df.shape[1]}")
st.write("**Columnas disponibles:**", list(df.columns))

# ============================
# 2. An√°lisis exploratorio
# ============================
st.subheader("üìä An√°lisis descriptivo")

if st.checkbox("Mostrar estad√≠sticas descriptivas"):
    st.write(df.describe())

if st.checkbox("Mostrar valores nulos por columna"):
    st.write(df.isnull().sum())

# ============================
# 3. Gr√°ficos interactivos
# ============================
st.subheader("üìà Visualizaciones del salario m√≠nimo")

if "Fecha" in df.columns and "Zona General" in df.columns:
    # Convertir fecha si no est√° en formato datetime
    df["Fecha"] = pd.to_datetime(df["Fecha"], errors="coerce")
    df = df.dropna(subset=["Fecha"])

    # Gr√°fico de l√≠nea del salario m√≠nimo
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.lineplot(x="Fecha", y="Zona General", data=df, color="blue")
    plt.title("Evoluci√≥n del salario m√≠nimo (Zona General)")
    plt.xlabel("A√±o")
    plt.ylabel("Pesos mexicanos")
    plt.grid(True)
    st.pyplot(fig)

else:
    st.warning("No se encontraron las columnas necesarias para graficar ('Fecha', 'Zona General').")

# ============================
# 4. Personalizaci√≥n adicional
# ============================
st.subheader("‚öôÔ∏è Personalizaci√≥n de visualizaci√≥n")

columna_y = st.selectbox("Selecciona una columna para graficar:", df.columns)
if "Fecha" in df.columns:
    fig2, ax2 = plt.subplots(figsize=(10, 5))
    sns.lineplot(x="Fecha", y=columna_y, data=df)
    plt.title(f"Evoluci√≥n de {columna_y} a lo largo del tiempo")
    plt.grid(True)
    st.pyplot(fig2)
else:
    st.info("Agrega una columna de fecha para habilitar esta secci√≥n.")

# ============================
# 5. Conclusiones
# ============================
st.markdown("""
---
### üìò Conclusiones
Esta aplicaci√≥n muestra el comportamiento del **salario m√≠nimo en M√©xico** a lo largo del tiempo,
permitiendo analizar tendencias, variaciones y comparaciones de forma interactiva.
Puedes adaptar este panel para incluir otros indicadores econ√≥micos,
como el costo de la canasta b√°sica o el poder adquisitivo (PA).
""")



# ========================================
# Guardar el c√≥digo de Streamlit en app.py
# ========================================

codigo_app = """
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

st.title("üí∞ An√°lisis del Salario M√≠nimo en M√©xico")

ruta = "/content/salario_minimo_limpio.csv"

st.sidebar.header("Configuraci√≥n")
st.sidebar.write("Puedes explorar el dataset y visualizar tendencias del salario m√≠nimo.")

# Intentar leer el archivo
try:
    df = pd.read_csv(ruta)
    st.success("‚úÖ Archivo cargado correctamente.")
except FileNotFoundError:
    st.error("‚ùå No se encontr√≥ el archivo en la ruta indicada.")
    st.stop()

st.subheader("üìÑ Vista general del dataset")

n_filas = st.slider("Selecciona cu√°ntas filas deseas ver:", 5, min(len(df), 100), 10)
st.dataframe(df.head(n_filas), use_container_width=True)

st.write(f"**Filas:** {df.shape[0]} | **Columnas:** {df.shape[1]}")
st.write("**Columnas disponibles:**", list(df.columns))

st.subheader("üìä An√°lisis descriptivo")

if st.checkbox("Mostrar estad√≠sticas descriptivas"):
    st.write(df.describe())

if st.checkbox("Mostrar valores nulos por columna"):
    st.write(df.isnull().sum())

st.subheader("üìà Visualizaciones del salario m√≠nimo")

if "Fecha" in df.columns and "Zona General" in df.columns:
    df["Fecha"] = pd.to_datetime(df["Fecha"], errors="coerce")
    df = df.dropna(subset=["Fecha"])

    fig, ax = plt.subplots(figsize=(10, 5))
    sns.lineplot(x="Fecha", y="Zona General", data=df, color="blue")
    plt.title("Evoluci√≥n del salario m√≠nimo (Zona General)")
    plt.xlabel("A√±o")
    plt.ylabel("Pesos mexicanos")
    plt.grid(True)
    st.pyplot(fig)
else:
    st.warning("No se encontraron las columnas necesarias para graficar ('Fecha', 'Zona General').")

st.subheader("‚öôÔ∏è Personalizaci√≥n de visualizaci√≥n")

columna_y = st.selectbox("Selecciona una columna para graficar:", df.columns)
if "Fecha" in df.columns:
    fig2, ax2 = plt.subplots(figsize=(10, 5))
    sns.lineplot(x="Fecha", y=columna_y, data=df)
    plt.title(f"Evoluci√≥n de {columna_y} a lo largo del tiempo")
    plt.grid(True)
    st.pyplot(fig2)
else:
    st.info("Agrega una columna de fecha para habilitar esta secci√≥n.")

st.markdown(\"\"\"
---
### üìò Conclusiones
Esta aplicaci√≥n muestra el comportamiento del **salario m√≠nimo en M√©xico** a lo largo del tiempo,
permitiendo analizar tendencias, variaciones y comparaciones de forma interactiva.
Puedes adaptar este panel para incluir otros indicadores econ√≥micos,
como el costo de la canasta b√°sica o el poder adquisitivo (PA).
\"\"\")
"""

# Guardar el contenido dentro de app.py
with open("app.py", "w") as f:
    f.write(codigo_app)

print("‚úÖ Archivo app.py creado correctamente.")

!streamlit run app.py --server.port 8501 &

#el sitio de la pagina creada es:
#https://winnie-setiform-solomon.ngrok-free.dev


